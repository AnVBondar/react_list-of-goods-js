{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_ALPHABETICALLY","SORT_BY_LENGTH","REVERSE","App","useState","sortMethod","setSortMethod","reverseMethod","setreverseMethod","visibleGoods","goods","sortedGoods","sort","good1","good2","localeCompare","reverse","length","getSortedGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"mPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAsB,WACtBC,EAAiB,SACjBC,EAAU,UAqCT,IAAMC,EAAM,WACjB,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA0CF,mBAAS,IAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KACMC,EAtCR,SAAwBC,EAAxB,GAA+D,IAA9BL,EAA6B,EAA7BA,WAAYE,EAAiB,EAAjBA,cACrCI,EAAW,YAAOD,GAExB,OAAIH,GAAiBF,IAAeL,EAC3BW,EACJC,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MAC3CE,UAGDT,GAAiBF,IAAeJ,EAC3BU,EACJC,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMI,OAASH,EAAMG,UAC5CD,UAGDT,EACKI,EAAYK,WAGjBX,GACFM,EAAYC,MAAK,SAACC,EAAOC,GACvB,OAAQT,GACN,KAAKL,EACH,OAAOa,EAAME,cAAcD,GAC7B,KAAKb,EACH,OAAOY,EAAMI,OAASH,EAAMG,OAC9B,QACE,OAAO,MAKRN,GAMcO,CACnBnB,EACA,CACEM,aACAE,kBAIJ,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYhB,IAAeL,IAE/BsB,QAAS,kBAAMhB,EAAcN,IAP/B,iCAYA,wBACEoB,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYhB,IAAeJ,IAE/BqB,QAAS,kBAAMhB,EAAcL,IAP/B,4BAYCM,EACC,wBACEa,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYd,IAAkBL,IAElCoB,QAAS,kBAAMd,EAAiB,KAPlC,qBAYA,wBACEY,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYd,IAAkBL,IAElCoB,QAAS,kBAAMd,EAAiBN,IAPlC,sBAaAG,GAAcE,IACd,wBACEa,KAAK,SACLD,UAAU,4BACVG,QAAS,kBAAMhB,EAAc,KAAOE,EAAiB,KAHvD,sBAUHC,EAAac,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,UClIhCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6e41656f.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport { useState } from 'react';\nimport cn from 'classnames';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_ALPHABETICALLY = 'alphabet';\nconst SORT_BY_LENGTH = 'length';\nconst REVERSE = 'reverse';\n\nfunction getSortedGoods(goods, { sortMethod, reverseMethod }) {\n  const sortedGoods = [...goods];\n\n  if (reverseMethod && sortMethod === SORT_ALPHABETICALLY) {\n    return sortedGoods\n      .sort((good1, good2) => good1.localeCompare(good2))\n      .reverse();\n  }\n\n  if (reverseMethod && sortMethod === SORT_BY_LENGTH) {\n    return sortedGoods\n      .sort((good1, good2) => good1.length - good2.length)\n      .reverse();\n  }\n\n  if (reverseMethod) {\n    return sortedGoods.reverse();\n  }\n\n  if (sortMethod) {\n    sortedGoods.sort((good1, good2) => {\n      switch (sortMethod) {\n        case SORT_ALPHABETICALLY:\n          return good1.localeCompare(good2);\n        case SORT_BY_LENGTH:\n          return good1.length - good2.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  return sortedGoods;\n}\n\nexport const App = () => {\n  const [sortMethod, setSortMethod] = useState('');\n  const [reverseMethod, setreverseMethod] = useState('');\n  const visibleGoods = getSortedGoods(\n    goodsFromServer,\n    {\n      sortMethod,\n      reverseMethod,\n    },\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-info',\n            { 'is-light': sortMethod !== SORT_ALPHABETICALLY },\n          )}\n          onClick={() => setSortMethod(SORT_ALPHABETICALLY)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-success',\n            { 'is-light': sortMethod !== SORT_BY_LENGTH },\n          )}\n          onClick={() => setSortMethod(SORT_BY_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        {reverseMethod ? (\n          <button\n            type=\"button\"\n            className={cn(\n              'button',\n              'is-warning',\n              { 'is-light': reverseMethod !== REVERSE },\n            )}\n            onClick={() => setreverseMethod('')}\n          >\n            Reverse\n          </button>\n        ) : (\n          <button\n            type=\"button\"\n            className={cn(\n              'button',\n              'is-warning',\n              { 'is-light': reverseMethod !== REVERSE },\n            )}\n            onClick={() => setreverseMethod(REVERSE)}\n          >\n            Reverse\n          </button>\n        )}\n\n        {(sortMethod || reverseMethod) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => setSortMethod('') || setreverseMethod('')}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      {visibleGoods.map(good => (\n        <li data-cy=\"Good\" key={good}>{good}</li>\n      ))}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}